# name: Deploy to AWS

# on:
#   push:
#     branches:
#       - main  # Para producciÃ³n
#       - stage  # Para staging

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Log in to Amazon ECR
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION: ${{ secrets.AWS_REGION }}
#         run: |
#           aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

#       - name: Set ECR repository
#         run: |
#           if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
#             echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY_PRODUCTION }}" >> $GITHUB_ENV
#           else
#             echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY_STAGE }}" >> $GITHUB_ENV
#           fi

#       - name: Build Docker image
#         run: |
#           docker build -t $ECR_REPOSITORY:latest .

#       - name: Tag Docker image
#         run: |
#           docker tag $ECR_REPOSITORY:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

#       - name: Push Docker image to Amazon ECR
#         run: |
#           docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

#       - name: Deploy to ECS
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_REGION: ${{ secrets.AWS_REGION }}
#         run: |
#           aws ecs update-service --cluster nombre-de-tu-cluster \
#             --service nombre-de-tu-servicio \
#             --force-new-deployment
